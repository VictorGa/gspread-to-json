{"version":3,"sources":["../develop/main.js"],"names":[],"mappings":";;;;;;wCAEkE,6BAA6B;;;;4BAQzE,iBAAiB;;;;iCACK,sBAAsB;;2BACf,gBAAgB;;AAZnE,OAAO,CAAC,qBAAqB,CAAC,CAAC;;AAI/B,IAAI,UAAU,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC7C,IAAI,MAAM,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACvC,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,OAAO,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;;AAM5C,IAAI,SAAS,GAAG,+BAAe,CAAC;AAChC,IAAI,iBAAiB,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACxC,IAAM,WAAW,GAAG,cAAc,CAAC;AACnC,IAAM,OAAO,GAAG,QAAQ,CAAC;AACzB,IAAM,WAAW,GAAG,aAAa,CAAC;;AAElC,IAAI,IAAI,GAAG,SAAP,IAAI,GAAe;;;AAEnB,QAAI,QAAQ,GAAG,CAAC,gDAAiB,MAAM,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAElE,WAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO,EAAI;;AAElC,eAAO,CAAC,OAAO,CAAC,UAAA,WAAW,EAAI;;;AAG3B,gBAAI,SAAS,YAAA,CAAC;AACd,gBAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACvC,mBAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACrB,gBAAI,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;AAC/B,yBAAS,GAAG,uCAAe,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC;;;AAGrD,oBAAI,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;AACvC,uBAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;aAC1B;;;AAGD,gBAAI,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,sBAAS,IAAI,QAAO,WAAW,CAAC,CAAC,CAAC;;;AAG/D,sBAAU,GAAG,MAAM,CAAC,MAAM,MAAA,CAAb,MAAM,qBAAW,UAAU,EAAC,CAAC;;;AAG1C,gBAAI,OAAO,SAAS,KAAK,WAAW,EAAE;AAClC,uDAAe,SAAS,EAAE,UAAU,CAAC,CAAC;aACzC;;AAED,kBAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;oBAClC,IAAI,GAAI,UAAU,CAAC,OAAO,CAAC,CAA3B,IAAI;;AAET,oBAAI,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE;AAC5B,wBAAI,IAAI,GAAG,EAAE,CAAC;AACd,wBAAI,CAAC,OAAO,CAAC,8BAAiB,IAAI,QAAO,IAAI,CAAC,CAAC,CAAC;AAChD,8BAAU,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;iBAC9B,MAGD;AACI,8BAAU,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;iBAC9B;aACJ,CAAC,CAAC;;AAEH,mBAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;SAC3B,CAAC,CAAA;KAEL,CAAC,CAAA;CAEL,CAAC;;AAEF,IAAI,IAAI,EAAE,CAAC","file":"main.js","sourcesContent":["require(\"babel-core/polyfill\");\r\n\r\nimport {default as SpreadsheetController, fecthSpreadsheet}  from './src/SpreadsheetController';\r\n\r\nvar FileWriter = require('./src/FileWriter');\r\nvar config = require('../config.json');\r\nvar fs = require('fs');\r\nvar colors = require('colors');\r\nvar Promise = require('native-or-bluebird');\r\n\r\nimport Tokenizer from './src/Tokenizer';\r\nimport {parseRelations,applyRelations} from './src/RelationParser';\r\nimport {parseTab, parseRow, convertRowToDict} from './src/TabUtils';\r\n\r\nlet tokenizer = new Tokenizer();\r\nlet invalidMediaProps = ['id', 'title'];\r\nconst relationKey = '__relation__';\r\nconst dictKey = '__dict';\r\nconst objParseKey = '__obj_parse';\r\n\r\nvar Main = function () {\r\n\r\n    let metadata = [fecthSpreadsheet(config.spreadsheetTranslations)];\r\n\r\n    Promise.all(metadata).then(results => {\r\n        //Build Id links\r\n        results.forEach(spreadsheet => {\r\n\r\n            //Get relations if exists\r\n            let relations;\r\n            let tabKeys = Object.keys(spreadsheet);\r\n            console.log(tabKeys);\r\n            if (tabKeys.includes(relationKey)) {\r\n                relations = parseRelations(spreadsheet[relationKey]);\r\n\r\n                //Remove it from keys\r\n                let idx = tabKeys.indexOf(relationKey);\r\n                tabKeys.splice(idx, 1);\r\n            }\r\n\r\n            //Parse tabs regular tabs\r\n            let parsedTabs = tabKeys.map(parseTab.bind(this, spreadsheet));\r\n\r\n            //Merge tabs\r\n            parsedTabs = Object.assign(...parsedTabs);\r\n\r\n            //Once we have all well parsed, let's check relations\r\n            if (typeof relations !== 'undefined') {\r\n                applyRelations(relations, parsedTabs);\r\n            }\r\n\r\n            Object.keys(parsedTabs).forEach(tabName => {\r\n                let {rows} = parsedTabs[tabName];\r\n\r\n                if (parsedTabs[tabName].isDict) {\r\n                    let dict = {};\r\n                    rows.forEach(convertRowToDict.bind(this, dict));\r\n                    parsedTabs[tabName] = dict;\r\n                }\r\n\r\n                else\r\n                {\r\n                    parsedTabs[tabName] = rows;\r\n                }\r\n            });\r\n\r\n            console.log(parsedTabs);\r\n        })\r\n\r\n    })\r\n\r\n};\r\n\r\nnew Main();\r\n"]}
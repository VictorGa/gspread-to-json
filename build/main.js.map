{"version":3,"sources":["../develop/main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["require(\"babel-core/polyfill\");\nvar SpreadsheetController = require('./src/SpreadsheetController');\nvar FileWriter = require('./src/FileWriter');\nvar config = require('../config.json');\nvar fs = require('fs');\nvar colors = require('colors');\nvar Promise = require('native-or-bluebird');\n\nimport Tokenizer from './src/Tokenizer';\nimport {parseRelations,applyRelations} from './src/RelationParser';\n\nlet tokenizer = new Tokenizer();\nlet invalidMediaProps = ['id', 'title'];\nconst relationKey = '__relation__';\nconst dictKey = '__dict';\n\nlet fecthSpreadsheet = (spId, cleanSpaces = true) => {\n\n    console.log(`Fetching data from ${spId}`.bgBlue.white);\n    return new Promise((resolve, reject) => {\n        let spreadsheet = new SpreadsheetController(spId, ()=> {\n            spreadsheet.getAll(cleanSpaces).then(data => resolve(data), error => reject(error));\n        });\n    });\n};\n\nlet parseRow = (row) => {\n\n    let parsed = {};\n    Object.keys(row).forEach(key => {\n        parsed[key] = tokenizer.parse(row[key]);\n    });\n\n    return parsed;\n}\n\nlet convertRowToDict = (parent, row) => {\n    if (typeof row.id !== 'undefined') {\n        let clone = Object.assign({}, row);\n        delete clone.id;\n\n        parent[row.id] = clone;\n    }\n\n}\n\nlet parseTab = (spreadsheet, tab) => {\n    let rows = spreadsheet[tab].map(row => parseRow(row));\n    let isDict = tab.indexOf(dictKey) !== -1;\n\n    return {[tab]: {rows, isDict}}\n}\n\nvar Main = function () {\n\n    let metadata = [fecthSpreadsheet(config.spreadsheetTest)];\n\n    Promise.all(metadata).then(results => {\n        //Build Id links\n        results.forEach(spreadsheet => {\n\n            //Get relations if exists\n            let relations;\n            let tabKeys = Object.keys(spreadsheet);\n            console.log(tabKeys);\n            if (tabKeys.includes(relationKey)) {\n                relations = parseRelations(spreadsheet[relationKey]);\n\n                //Remove it from keys\n                let idx = tabKeys.indexOf(relationKey);\n                tabKeys.splice(idx, 1);\n            }\n\n            //Parse tabs\n            let parsedTabs = tabKeys.map(parseTab.bind(this, spreadsheet));\n\n            //Unified tabs\n            parsedTabs = Object.assign(...parsedTabs);\n\n            //Once we have all well parsed, let's check relations\n            if (typeof relations !== 'undefined') {\n                applyRelations(relations, parsedTabs);\n            }\n\n            Object.keys(parsedTabs).forEach(tabName => {\n                let {rows} = parsedTabs[tabName];\n\n                if (parsedTabs[tabName].isDict) {\n                    let dict = {};\n                    rows.forEach(convertRowToDict.bind(this, dict));\n                    parsedTabs[tabName] = dict;\n                }\n                else\n                {\n                    parsedTabs[tabName] = rows;\n                }\n            });\n\n            console.log(parsedTabs);\n        })\n\n    })\n\n};\n\nnew Main();\n"]}
{"version":3,"sources":["../../develop/src/UtilParser.js"],"names":[],"mappings":";;AAAA,SAAS,UAAU,GAAE,EAEpB;;AAED,UAAU,CAAC,OAAO,GAAG,UAAS,GAAG,EACjC;AACC,KAAG,GAAG,CAAC,MAAM,EACb;AACC,SAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EACtB;;AAED,QAAO,EAAE,CAAC;CACV,CAAA;;AAGD,UAAU,CAAC,aAAa,GAAG,UAAS,GAAG,EACvC;AACC,KAAI,eAAe,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC9C,QAAO,EAAC,GAAG,EAAE,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC;CAClF,CAAA;;AAED,UAAU,CAAC,UAAU,GAAG,UAAS,GAAG,EACpC;AACC,KAAI,eAAe,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC9C,QAAO,EAAC,CAAC,EAAE,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC;CAC9E,CAAA;;AAED,UAAU,CAAC,QAAQ,GAAG,UAAS,GAAG,EAClC;AACC,QAAO,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,UAAS,KAAK,EAAE,MAAM,EAAE;AACnD,SAAO,MAAM,CAAC,WAAW,EAAE,CAAC;EAC5B,CAAC,CAAC;CACH,CAAA;;AAED,UAAU,CAAC,WAAW,GAAG,UAAS,GAAG,EACrC;AACC,QAAO,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;CAC/B,CAAA;;AAED,UAAU,CAAC,MAAM,GAAG,UAAS,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE;AACtD,KAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;AACnB,EAAC,GAAG,MAAM,CAAC;AACX,MAAK,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;AAE7B,QAAO,KAAK,CAAC,MAAM,EAAE;AACpB,MAAI,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;AACrB,MAAG,CAAC,KAAK,CAAC,MAAM,EAChB;AACC,IAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;GACpB,MAED;AACC,IAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;GAC5B;EACD;AACD,QAAO,MAAM,CAAC;CACd,CAAA;;AAID,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"UtilParser.js","sourcesContent":["function UtilParser(){\r\n\r\n}\r\n\r\nUtilParser.toArray = function(str)\r\n{\r\n\tif(str.length)\r\n\t{\r\n\t\treturn str.split(',');\r\n\t}\r\n\r\n\treturn [];\r\n}\r\n\r\n\r\nUtilParser.toCoordinates = function(str)\r\n{\r\n\tvar coordinateArray = UtilParser.toArray(str);\r\n\treturn {lat: parseFloat(coordinateArray[0]), lng: parseFloat(coordinateArray[1])};\r\n}\r\n\r\nUtilParser.toPosition = function(str)\r\n{\r\n\tvar coordinateArray = UtilParser.toArray(str);\r\n\treturn {x: parseFloat(coordinateArray[0]), y: parseFloat(coordinateArray[1])};\r\n}\r\n\r\nUtilParser.camelize = function(str)\r\n{\r\n\treturn str.replace(/-(.)/g, function(match, group1) {\r\n\t\treturn group1.toUpperCase();\r\n\t});\r\n}\r\n\r\nUtilParser.cleanSpaces = function(str)\r\n{\r\n\treturn str.replace(/\\s+/g, '');\r\n}\r\n\r\nUtilParser.deepen = function(namespace, value, parsed) {\r\n\tvar t, parts, part;\r\n\tt = parsed;\r\n\tparts = namespace.split('.');\r\n\r\n\twhile (parts.length) {\r\n\t\tpart = parts.shift();\r\n\t\tif(!parts.length)\r\n\t\t{\r\n\t\t\tt = t[part] = value;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tt = t[part] = t[part] || {};\r\n\t\t}\r\n\t}\r\n\treturn parsed;\r\n}\r\n\r\n\r\n\r\nmodule.exports = UtilParser;"]}
{"version":3,"sources":["../../develop/src/Tokenizer.js"],"names":[],"mappings":";;;;;;;;;;;;sBAAmB,UAAU;;;;0BACN,cAAc;;;;uBACjB,WAAW;;;;IAEzB,SAAS;AAEA,aAFT,SAAS,GAEG;8BAFZ,SAAS;KAIV;;iBAJC,SAAS;;eAMN,eAAC,OAAO,EAAE;AACZ,mBAAO,MAAM,CAAC,IAAI,qBAAQ,CACL,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,sBAAS,CAAC,CACnD,MAAM,CAAC,UAAA,YAAY;uBAAI,OAAO,YAAY,KAAK,WAAW;aAAA,CAAC,CAC3D,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAGhE;;;eAEY,uBAAC,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE;AACtC,gBAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EACnC;AACI,uBAAO,EAAC,SAAS,EAAT,SAAS,EAAE,OAAO,EAAP,OAAO,EAAC,CAAC;aAC/B;SAEJ;;;eAEkB,6BAAC,kBAAkB,EACtC;AACI,gBAAI,MAAM,YAAA,CAAC;AACX,oBAAQ,kBAAkB,CAAC,SAAS;AAEhC,qBAAK,wBAAW,KAAK;AACjB,0BAAM,GAAG,qBAAQ,OAAO,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;AACrD,0BAAM;AAAA,aACb;;AAED,mBAAO,MAAM,CAAC;SACjB;;;WAlCC,SAAS;;;qBAsCA,SAAS","file":"Tokenizer.js","sourcesContent":["import Regexs from './Regexs';\nimport RegexNames from './RegexNames';\nimport Parsers from './Parsers';\n\nclass Tokenizer {\n\n    constructor() {\n\n    }\n\n    parse(element) {\n       return Object.keys(Regexs).\n                            map(this.discoverRegex.bind(this, element, Regexs)).\n                            filter(regexElement => typeof regexElement !== 'undefined').\n                            map(this.parseElementByRegex.bind(this));\n\n\n    }\n\n    discoverRegex(element, regexs, regexName) {\n        if(element.match(regexs[regexName]))\n        {\n            return {regexName, element};\n        }\n\n    }\n\n    parseElementByRegex(regexElementCouple)\n    {\n        let result;\n        switch (regexElementCouple.regexName)\n        {\n            case RegexNames.ARRAY:\n                result = Parsers.toArray(regexElementCouple.element);\n                break;\n        }\n\n        return result;\n    }\n}\n\n\nexport default Tokenizer;"]}
{"version":3,"sources":["../../develop/src/Parsers.js"],"names":[],"mappings":";;;;;;;;;;IAAM,OAAO;AAEE,aAFT,OAAO,GAGT;8BAHE,OAAO;KAKR;;iBALC,OAAO;;eAOK,iBAAC,GAAG,EAClB;AACI,eAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAC,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;AAE/C,mBAAO,GAAG,CAAC;SACd;;;eAEY,gBAAC,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE;AACpC,gBAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;AACnB,aAAC,GAAG,MAAM,CAAC;AACX,iBAAK,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;AAE7B,mBAAO,KAAK,CAAC,MAAM,EAAE;AACjB,oBAAI,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;AACrB,oBAAG,CAAC,KAAK,CAAC,MAAM,EAChB;AACI,qBAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;iBACvB,MAED;AACI,qBAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;iBAC/B;aACJ;AACD,mBAAO,MAAM,CAAC;SACjB;;;eAEc,kBAAC,GAAG,EACnB;AACI,mBAAO,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,UAAS,KAAK,EAAE,MAAM,EAAE;AAChD,uBAAO,MAAM,CAAC,WAAW,EAAE,CAAC;aAC/B,CAAC,CAAC;SACN;;;eAEiB,qBAAC,GAAG,EACtB;AACI,mBAAO,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;SAClC;;;eAEiB,qBAAC,GAAG,EACtB;AACI,mBAAO,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;SACvC;;;WAhDC,OAAO;;;qBAmDE,OAAO","file":"Parsers.js","sourcesContent":["class Parsers\r\n{\r\n    constructor()\r\n    {\r\n\r\n    }\r\n\r\n    static toArray(str)\r\n    {\r\n        str = str.substring(1,str.length-1).split(',');\r\n\r\n        return str;\r\n    }\r\n\r\n    static deepen(namespace, value, parsed) {\r\n        var t, parts, part;\r\n        t = parsed;\r\n        parts = namespace.split('.');\r\n\r\n        while (parts.length) {\r\n            part = parts.shift();\r\n            if(!parts.length)\r\n            {\r\n                t = t[part] = value;\r\n            }\r\n            else\r\n            {\r\n                t = t[part] = t[part] || {};\r\n            }\r\n        }\r\n        return parsed;\r\n    }\r\n\r\n    static camelize(str)\r\n    {\r\n        return str.replace(/-(.)/g, function(match, group1) {\r\n            return group1.toUpperCase();\r\n        });\r\n    }\r\n\r\n    static cleanSpaces(str)\r\n    {\r\n        return str.replace(/\\s+/g, '');\r\n    }\r\n\r\n    static cleanLocale(str)\r\n    {\r\n        return str.replace('-locale-', '-');\r\n    }\r\n}\r\n\r\nexport default Parsers;"]}
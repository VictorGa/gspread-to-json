{"version":3,"sources":["../../develop/src/Parsers.js"],"names":[],"mappings":";;;;;;;;;;IAAM,OAAO;AAEE,aAFT,OAAO,GAGT;8BAHE,OAAO;KAKR;;iBALC,OAAO;;eAOK,iBAAC,GAAG,EAClB;AACI,eAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAC,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;AAE/C,mBAAO,GAAG,CAAC;SAEd;;;eAEY,gBAAC,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE;AACpC,gBAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;AACnB,aAAC,GAAG,MAAM,CAAC;AACX,iBAAK,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;AAE7B,mBAAO,KAAK,CAAC,MAAM,EAAE;AACjB,oBAAI,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;AACrB,oBAAG,CAAC,KAAK,CAAC,MAAM,EAChB;AACI,qBAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;iBACvB,MAED;AACI,qBAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;iBAC/B;aACJ;AACD,mBAAO,MAAM,CAAC;SACjB;;;eAEc,kBAAC,GAAG,EACnB;AACI,mBAAO,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,UAAS,KAAK,EAAE,MAAM,EAAE;AAChD,uBAAO,MAAM,CAAC,WAAW,EAAE,CAAC;aAC/B,CAAC,CAAC;SACN;;;eAEiB,qBAAC,GAAG,EACtB;AACI,mBAAO,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;SAClC;;;WA5CC,OAAO;;;qBA+CE,OAAO","file":"Parsers.js","sourcesContent":["class Parsers\n{\n    constructor()\n    {\n\n    }\n\n    static toArray(str)\n    {\n        str = str.substring(1,str.length-1).split(',');\n\n        return str;\n\n    }\n\n    static deepen(namespace, value, parsed) {\n        var t, parts, part;\n        t = parsed;\n        parts = namespace.split('.');\n\n        while (parts.length) {\n            part = parts.shift();\n            if(!parts.length)\n            {\n                t = t[part] = value;\n            }\n            else\n            {\n                t = t[part] = t[part] || {};\n            }\n        }\n        return parsed;\n    }\n\n    static camelize(str)\n    {\n        return str.replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n    }\n\n    static cleanSpaces(str)\n    {\n        return str.replace(/\\s+/g, '');\n    }\n}\n\nexport default Parsers;"]}